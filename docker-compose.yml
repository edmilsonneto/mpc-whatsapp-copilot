version: '3.8'

services:
  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/mcp_db
    depends_on:
      - redis
      - postgres
    volumes:
      - ./mcp-server:/app
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - mcp-network

  whatsapp-integration:
    build:
      context: ./whatsapp-integration
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MCP_SERVER_URL=http://mcp-server:8000
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mcp-server
      - redis
    volumes:
      - ./whatsapp-integration:/app
      - whatsapp-sessions:/app/.wwebjs_auth
    restart: unless-stopped
    networks:
      - mcp-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - mcp-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mcp_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - mcp-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - mcp-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - mcp-network

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:
  whatsapp-sessions:

networks:
  mcp-network:
    driver: bridge
